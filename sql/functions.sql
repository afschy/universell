CREATE OR REPLACE FUNCTION GET_FIRST_POST_IMAGE(ID IN NUMBER) RETURN VARCHAR2 IS
	IMG VARCHAR2(100);
BEGIN
	SELECT IMAGE INTO IMG
	FROM POSTIMAGE
	WHERE POSTIMAGE.POST_ID = ID
	FETCH FIRST 1 ROWS ONLY;

	RETURN IMG;
	
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN '/images/post_placeholder.jpg';
END;
/

CREATE OR REPLACE FUNCTION GET_FIRST_PRODUCT_IMAGE(ID IN NUMBER) RETURN VARCHAR2 IS
	IMG VARCHAR2(100);
BEGIN
	SELECT IMAGE INTO IMG
	FROM PRODUCTIMAGE
	WHERE PRODUCTIMAGE.PRODUCT_ID = ID
	FETCH FIRST 1 ROWS ONLY;

	RETURN IMG;
	
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN '/images/iphone.jpg';
END;
/

CREATE OR REPLACE FUNCTION GET_UPVOTE_COUNT(ID IN NUMBER) RETURN NUMBER IS
	COUNTER NUMBER;
BEGIN
	SELECT COUNT(*) INTO COUNTER
	FROM POSTUPVOTE
	WHERE POSTUPVOTE.POST_ID = ID;
	
	RETURN COUNTER;

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION GET_REVIEW_COUNT(ID IN NUMBER) RETURN NUMBER IS
	COUNTER NUMBER;
BEGIN
	SELECT COUNT(*) INTO COUNTER
	FROM REVIEW
	WHERE REVIEW.POST_ID = ID;
	
	RETURN COUNTER;

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION TOTAL_CART_COST(ID IN NUMBER) RETURN NUMBER IS
	TOTALCOST NUMBER;
BEGIN
	SELECT SUM(TOTAL) INTO TOTALCOST
	FROM CART
	WHERE CART.USER_ID = ID;
	RETURN TOTALCOST;
END;
/

CREATE OR REPLACE PROCEDURE VALIDATE_CART(ID IN NUMBER, PHN IN VARCHAR2, ADDR IN VARCHAR2) IS
BEGIN
	FOR R IN (SELECT USER_ID, POST_ID, QUANTITY, TOTAL FROM CART WHERE USER_ID = ID)
	LOOP
		INSERT INTO TRANSACTION(USER_ID, POST_ID, TIME, QUANTITY, STATUS, AMOUNT, PHONE, ADDRESS) 
		VALUES(R.USER_ID, R.POST_ID, SYSDATE, R.QUANTITY, 0, R.TOTAL, PHN, ADDR);
	END LOOP;
	
	DELETE FROM CART
	WHERE USER_ID = ID;
END;
/



























